
// This file is used by Code Analysis to maintain SuppressMessage 
// attributes that are applied to this project.
// Project-level suppressions either have no target or are given 
// a specific target and scoped to a namespace, type, member, etc.

[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.ChargingConnector_Id.Equals(System.Object)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.ChargingPool_Id.Equals(System.Object)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.ChargingStation_Id.Equals(System.Object)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.RequestStatus.Equals(System.Object)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.HeartbeatRequest.Equals(System.Object)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.HeartbeatResponse.Equals(System.Object)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetEVSEAvailabilityStatusRequest.Equals(System.Object)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0016:Use 'throw' expression", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.CPOClient.#ctor(System.String,cloud.charging.open.protocols.eMIPv0_7_4.CPO.CPOClient.CPOClientLogger,System.String,org.GraphDefined.Vanaheimr.Hermod.IPPort,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Security.Cryptography.X509Certificates.X509Certificate,System.String,System.String,System.String,System.String,System.Nullable{System.TimeSpan},System.Nullable{System.Byte},org.GraphDefined.Vanaheimr.Hermod.DNS.DNSClient)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Redundancy", "RCS1163:Unused parameter.", Justification = "<Pending>", Scope = "member", Target = "~F:cloud.charging.open.protocols.eMIPv0_7_4.CPO.CPOClient._CustomSendHeartbeatSOAPRequestMapper")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "RCS1001:Add braces.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.ACustomData.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "RCS1001:Add braces.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.ChargingConnector_Id.Parse(System.String)~cloud.charging.open.protocols.eMIPv0_7_4.ChargingConnector_Id")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "RCS1001:Add braces.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.ChargingPool_Id.Parse(System.String)~cloud.charging.open.protocols.eMIPv0_7_4.ChargingPool_Id")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "RCS1001:Add braces.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.ChargingStation_Id.Parse(System.String)~cloud.charging.open.protocols.eMIPv0_7_4.ChargingStation_Id")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "RCS1001:Add braces.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.ACustomDataBuilder.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "RCS1001:Add braces.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.HeartbeatRequest.TryParse(System.Xml.Linq.XElement,org.GraphDefined.Vanaheimr.Hermod.SOAP.CustomXMLParserDelegate{cloud.charging.open.protocols.eMIPv0_7_4.CPO.HeartbeatRequest},cloud.charging.open.protocols.eMIPv0_7_4.CPO.HeartbeatRequest@,org.GraphDefined.Vanaheimr.Illias.OnExceptionDelegate)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "RCS1001:Add braces.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.HeartbeatResponse.TryParse(cloud.charging.open.protocols.eMIPv0_7_4.CPO.HeartbeatRequest,System.Xml.Linq.XElement,org.GraphDefined.Vanaheimr.Hermod.SOAP.CustomXMLParserDelegate{cloud.charging.open.protocols.eMIPv0_7_4.CPO.HeartbeatResponse},cloud.charging.open.protocols.eMIPv0_7_4.CPO.HeartbeatResponse@,org.GraphDefined.Vanaheimr.Illias.OnExceptionDelegate)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "RCS1001:Add braces.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetEVSEAvailabilityStatusRequest.TryParse(System.Xml.Linq.XElement,org.GraphDefined.Vanaheimr.Hermod.SOAP.CustomXMLParserDelegate{cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetEVSEAvailabilityStatusRequest},cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetEVSEAvailabilityStatusRequest@,org.GraphDefined.Vanaheimr.Illias.OnExceptionDelegate)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "RCS1001:Add braces.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.CPOClient.SendHeartbeat(cloud.charging.open.protocols.eMIPv0_7_4.CPO.HeartbeatRequest)~System.Threading.Tasks.Task{org.GraphDefined.Vanaheimr.Hermod.HTTP.HTTPResponse{cloud.charging.open.protocols.eMIPv0_7_4.CPO.HeartbeatResponse}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "RCS1001:Add braces.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.RequestStatus.CompareTo(System.Object)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetEVSEAvailabilityStatusRequest.Equals(cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetEVSEAvailabilityStatusRequest)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "RCS1075:Avoid empty catch clause that catches System.Exception.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.ChargingPool_Id.TryParse(System.String,cloud.charging.open.protocols.eMIPv0_7_4.ChargingPool_Id@)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "RCS1075:Avoid empty catch clause that catches System.Exception.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.ChargingStation_Id.TryParse(System.String,cloud.charging.open.protocols.eMIPv0_7_4.ChargingStation_Id@)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "RCS1075:Avoid empty catch clause that catches System.Exception.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.EVSE_Id.TryParse(System.String,cloud.charging.open.protocols.eMIPv0_7_4.EVSE_Id@)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "RCS1075:Avoid empty catch clause that catches System.Exception.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.ChargingConnector_Id.TryParse(System.String,cloud.charging.open.protocols.eMIPv0_7_4.ChargingConnector_Id@)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.ChargingPool_Id.Equals(cloud.charging.open.protocols.eMIPv0_7_4.ChargingPool_Id)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.ChargingPool_Id.CompareTo(cloud.charging.open.protocols.eMIPv0_7_4.ChargingPool_Id)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.ChargingStation_Id.Equals(cloud.charging.open.protocols.eMIPv0_7_4.ChargingStation_Id)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.ChargingStation_Id.CompareTo(cloud.charging.open.protocols.eMIPv0_7_4.ChargingStation_Id)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.EVSE_Id.Equals(cloud.charging.open.protocols.eMIPv0_7_4.EVSE_Id)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.EVSE_Id.CompareTo(cloud.charging.open.protocols.eMIPv0_7_4.EVSE_Id)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.ChargingConnector_Id.Equals(cloud.charging.open.protocols.eMIPv0_7_4.ChargingConnector_Id)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.ChargingConnector_Id.CompareTo(cloud.charging.open.protocols.eMIPv0_7_4.ChargingConnector_Id)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.HeartbeatResponse.Equals(cloud.charging.open.protocols.eMIPv0_7_4.CPO.HeartbeatResponse)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetEVSEAvailabilityStatusResponse.Equals(cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetEVSEAvailabilityStatusResponse)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetEVSEAvailabilityStatusResponse.Equals(System.Object)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetEVSEAvailabilityStatusResponse.Builder.Equals(cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetEVSEAvailabilityStatusResponse)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.HeartbeatResponse.Builder.Equals(cloud.charging.open.protocols.eMIPv0_7_4.CPO.HeartbeatResponse)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetChargingStationAvailabilityStatusResponse.Equals(cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetChargingStationAvailabilityStatusResponse)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetChargingStationAvailabilityStatusResponse.Builder.Equals(cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetChargingStationAvailabilityStatusResponse)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetChargingPoolAvailabilityStatusResponse.Equals(cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetChargingPoolAvailabilityStatusResponse)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetChargingPoolAvailabilityStatusResponse.Builder.Equals(cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetChargingPoolAvailabilityStatusResponse)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetChargingConnectorAvailabilityStatusRequest.Equals(cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetChargingConnectorAvailabilityStatusRequest)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetChargingConnectorAvailabilityStatusResponse.Equals(cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetChargingConnectorAvailabilityStatusResponse)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetChargingConnectorAvailabilityStatusResponse.Builder.Equals(cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetChargingConnectorAvailabilityStatusResponse)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetEVSEBusyStatusRequest.Equals(cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetEVSEBusyStatusRequest)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetEVSEBusyStatusResponse.Equals(cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetEVSEBusyStatusResponse)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetEVSEBusyStatusResponse.Builder.Equals(cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetEVSEBusyStatusResponse)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetEVSESyntheticStatusRequest.Equals(cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetEVSESyntheticStatusRequest)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetEVSESyntheticStatusResponse.Equals(cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetEVSESyntheticStatusResponse)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetEVSESyntheticStatusResponse.Builder.Equals(cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetEVSESyntheticStatusResponse)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "RCS1075:Avoid empty catch clause that catches System.Exception.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.Transaction_Id.TryParse(System.String,cloud.charging.open.protocols.eMIPv0_7_4.Transaction_Id@)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "RCS1075:Avoid empty catch clause that catches System.Exception.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.PartnerServiceSession_Id.TryParse(System.String,cloud.charging.open.protocols.eMIPv0_7_4.PartnerServiceSession_Id@)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.PartnerServiceSession_Id.CompareTo(cloud.charging.open.protocols.eMIPv0_7_4.PartnerServiceSession_Id)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.Transaction_Id.CompareTo(cloud.charging.open.protocols.eMIPv0_7_4.Transaction_Id)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.Transaction_Id.Equals(cloud.charging.open.protocols.eMIPv0_7_4.Transaction_Id)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.PartnerServiceSession_Id.Equals(cloud.charging.open.protocols.eMIPv0_7_4.PartnerServiceSession_Id)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "RCS1075:Avoid empty catch clause that catches System.Exception.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.RequestedService_Id.TryParse(System.String,cloud.charging.open.protocols.eMIPv0_7_4.RequestedService_Id@)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.RequestedService_Id.CompareTo(cloud.charging.open.protocols.eMIPv0_7_4.RequestedService_Id)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.RequestedService_Id.Equals(cloud.charging.open.protocols.eMIPv0_7_4.RequestedService_Id)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "RCS1075:Avoid empty catch clause that catches System.Exception.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.User_Id.TryParse(System.String,cloud.charging.open.protocols.eMIPv0_7_4.User_Id@)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.User_Id.CompareTo(cloud.charging.open.protocols.eMIPv0_7_4.User_Id)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.User_Id.Equals(cloud.charging.open.protocols.eMIPv0_7_4.User_Id)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "RCS1075:Avoid empty catch clause that catches System.Exception.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.ServiceSession_Id.TryParse(System.String,cloud.charging.open.protocols.eMIPv0_7_4.ServiceSession_Id@)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.ServiceSession_Id.CompareTo(cloud.charging.open.protocols.eMIPv0_7_4.ServiceSession_Id)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.ServiceSession_Id.Equals(cloud.charging.open.protocols.eMIPv0_7_4.ServiceSession_Id)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "RCS1075:Avoid empty catch clause that catches System.Exception.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.Contract_Id.TryParse(System.String,cloud.charging.open.protocols.eMIPv0_7_4.Contract_Id@)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.Contract_Id.CompareTo(cloud.charging.open.protocols.eMIPv0_7_4.Contract_Id)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.Contract_Id.Equals(cloud.charging.open.protocols.eMIPv0_7_4.Contract_Id)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.GetServiceAuthorisationRequest.Equals(cloud.charging.open.protocols.eMIPv0_7_4.CPO.GetServiceAuthorisationRequest)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.Operator_Id.CompareTo(cloud.charging.open.protocols.eMIPv0_7_4.Operator_Id)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.Operator_Id.Equals(cloud.charging.open.protocols.eMIPv0_7_4.Operator_Id)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.MeterReport.CompareTo(cloud.charging.open.protocols.eMIPv0_7_4.MeterReport)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.MeterReport.Equals(cloud.charging.open.protocols.eMIPv0_7_4.MeterReport)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.GetServiceAuthorisationResponse.Builder.Equals(cloud.charging.open.protocols.eMIPv0_7_4.CPO.GetServiceAuthorisationResponse)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.GetServiceAuthorisationResponse.Equals(cloud.charging.open.protocols.eMIPv0_7_4.CPO.GetServiceAuthorisationResponse)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetChargeDetailRecordRequest.Equals(cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetChargeDetailRecordRequest)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetChargeDetailRecordResponse.Equals(cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetChargeDetailRecordResponse)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetChargingStationAvailabilityStatusRequest.Equals(cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetChargingStationAvailabilityStatusRequest)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetChargeDetailRecordResponse.Builder.Equals(cloud.charging.open.protocols.eMIPv0_7_4.CPO.SetChargeDetailRecordResponse)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "RCS1075:Avoid empty catch clause that catches System.Exception.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.PartnerProduct_Id.TryParse(System.String,cloud.charging.open.protocols.eMIPv0_7_4.PartnerProduct_Id@)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.PartnerProduct_Id.CompareTo(cloud.charging.open.protocols.eMIPv0_7_4.PartnerProduct_Id)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.PartnerProduct_Id.Equals(cloud.charging.open.protocols.eMIPv0_7_4.PartnerProduct_Id)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.ChargeDetailRecord.CompareTo(cloud.charging.open.protocols.eMIPv0_7_4.ChargeDetailRecord)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.ChargeDetailRecord.Equals(cloud.charging.open.protocols.eMIPv0_7_4.ChargeDetailRecord)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.Provider_Id.Equals(cloud.charging.open.protocols.eMIPv0_7_4.Provider_Id)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.Provider_Id.CompareTo(cloud.charging.open.protocols.eMIPv0_7_4.Provider_Id)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.ChargeDetailRecord.Builder.Equals(cloud.charging.open.protocols.eMIPv0_7_4.ChargeDetailRecord.Builder)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.ARequest`1.Equals(`0)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.AResponse`2.Equals(`1)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "RCS1075:Avoid empty catch clause that catches System.Exception.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.ACustomData.GetCustomDataAs``1(System.String)~``0")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "RCS1075:Avoid empty catch clause that catches System.Exception.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.ACustomData.IfDefinedAs``1(System.String,System.Action{``0})")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "RCS1075:Avoid empty catch clause that catches System.Exception.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.ACustomData.WhenDefinedAs``1(System.String,System.Action{``0})")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "RCS1075:Avoid empty catch clause that catches System.Exception.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.ACustomData.MapCustomData``1(System.String,System.Func{System.Object,``0})~``0")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "RCS1075:Avoid empty catch clause that catches System.Exception.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.ACustomData.TryGetCustomDataAs``1(System.String,``0@)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.RequestStatus.Equals(cloud.charging.open.protocols.eMIPv0_7_4.RequestStatus)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.RequestStatus.CompareTo(cloud.charging.open.protocols.eMIPv0_7_4.RequestStatus)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "RCS1075:Avoid empty catch clause that catches System.Exception.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.User_Id.TryParse(System.String,cloud.charging.open.protocols.eMIPv0_7_4.User_Id@,cloud.charging.open.protocols.eMIPv0_7_4.UserIdFormats)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.MeterType_Id.CompareTo(cloud.charging.open.protocols.eMIPv0_7_4.MeterType_Id)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability", "RCS1168:Parameter name differs from base name.", Justification = "<Pending>", Scope = "member", Target = "~M:cloud.charging.open.protocols.eMIPv0_7_4.MeterType_Id.Equals(cloud.charging.open.protocols.eMIPv0_7_4.MeterType_Id)~System.Boolean")]

